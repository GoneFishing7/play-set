@import "variables.scss";

@mixin buttonVariantOutline($color, $isDark) {
  // Light variant
  background-color: $light-background-color;
  color: color($color);
  border-color: color($color);

  &:hover {
    background-color: color($color);
    color: $light-background-color;
    &.button-static {
      background-color: $light-background-color;
      color: color($color);
    }
  }
}

@mixin buttonVariantFilled($color, $isDark) {
  // Light variant
  background-color: color($color);
  color: $light-background-color;
  border-color: color($color);

  &:hover {
    background-color: $light-background-color;
    color: color($color);
    &.button-static {
      background-color: color($color);
      color: $light-background-color;
    }
  }
}

.button {
  box-shadow: none;
  height: $button-height;
  font-size: $button-height * (3/10);
  border-radius: $button-radius;
  outline: none;
  border: 1px $default-button-color solid;
  color: $default-button-color;
  transition: $button-animation-speed;
  background-color: $light-background-color;
  min-width: $min-button-width;
  user-select: none;

  &:hover {
    cursor: pointer;
    background-color: $default-button-color;
    color: $light-background-color;
    &.button-static {
      background-color: $light-background-color;
      color: $default-button-color;
    }
  }

  &.button-large {
    width: 100%;
    font-size: $button-height * 0.5;
    font-weight: 100;
  }

  &.button-rounded-none {
    border-radius: 0;
  }

  &.button-rounded-left {
    border-radius: $button-radius 0 0 $button-radius;
  }

  &.button-rounded-right {
    border-radius: 0 $button-radius $button-radius 0;
  }
}

@each $color, $value in $colors {
  // Buttons
  .button-#{$color} {
    @include buttonVariantOutline($color, false);
  }

  .button-filled-#{$color} {
    @include buttonVariantFilled($color, false);
  }
}
